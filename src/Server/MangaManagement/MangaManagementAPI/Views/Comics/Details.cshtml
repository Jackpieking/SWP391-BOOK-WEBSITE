@using Model
@model ComicModel
@{
    this.ViewData["Title"] = "Admin | Comic Details";
    IEnumerable<CategoryModel> categories = ViewData["categories"] as IEnumerable<CategoryModel>;
}

<div class="container-fluid">
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h4 class="m-0 font-weight-bold text-primary">@Html.DisplayFor(model => model.ComicName)</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ComicIdentifier)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ComicIdentifier)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ComicName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ComicName)
                </dd>
                <dt class="col-sm-2">
                    Categories
                </dt>
                <dd class="col-sm-10">
                    @foreach(var item in categories)
                    {
                        @item.CategoryName;
                    }
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ComicDescription)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ComicDescription)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ComicAvatar)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ComicAvatar)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ComicPublishedDate)
                </dt>
                <dd class="col-sm-10">
                    @Model.ComicPublishedDate
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ComicStatus)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ComicStatus)
                </dd>
            </dl>
        </div>
        <hr>

        <!-- Chapters Table -->
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary h1">Chapters Table</h6>
                <a asp-action="Create"
                   asp-controller="Chapter"
                   asp-route-id="@Model.ComicIdentifier"
                   class="mx-2 my-2 text-decoration-none btn btn-outline-danger d-block" style="font-size:20px">
                    Create Chapter
                </a>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Number</th>
                                <th>Price</th>
                                <th>Date</th>
                                <th>Modified</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Id</th>
                                <th>Number</th>
                                <th>Price</th>
                                <th>Date</th>
                                <th>Modified</th>
                            </tr>
                        </tfoot>
                        <tbody>
                            @if (Model.ChapterModels == null)
                            {
                                <tr class="error">Error</tr>
                            }
                            else
                            {
                                foreach (var item in Model.ChapterModels)
                                {
                                    <tr>
                                        <td>@item.ChapterIdentifier</td>
                                        <td>@item.ChapterNumber</td>
                                        <td>@item.ChapterUnlockPrice</td>
                                        <td>@item.AddedDate</td>
                                        <td>
                                            <a asp-controller="Chapter" asp-action="Details" asp-route-id="@item.ChapterIdentifier" class="btn btn-info btn-circle">
                                                <i class="fas fa-info-circle"></i>
                                            </a>
                                            <a asp-controller="Chapter" asp-action="Edit" asp-route-id="@item.ChapterIdentifier" class="btn btn-warning btn-circle">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a action="Delete" controller="Chapter" data-id="@item.ChapterIdentifier" class="btn btn-danger btn-circle" data-toggle="modal" data-target="#deleteModal">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Delete Modal -->
        @await Html.PartialAsync("_DeleteModal")

    </div>
</div>
