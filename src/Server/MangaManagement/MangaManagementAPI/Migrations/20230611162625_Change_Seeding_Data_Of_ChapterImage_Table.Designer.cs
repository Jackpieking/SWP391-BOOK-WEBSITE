// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MangaContext))]
    [Migration("20230611162625_Change_Seeding_Data_Of_ChapterImage_Table")]
    partial class Change_Seeding_Data_Of_ChapterImage_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entity.BuyingHistoryEntity", b =>
                {
                    b.Property<Guid>("UserIdentifer")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChapterIdentifer")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BuyingDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserIdentifer", "ChapterIdentifer");

                    b.ToTable("buying_history", (string)null);
                });

            modelBuilder.Entity("Entity.CategoryEntity", b =>
                {
                    b.Property<Guid>("CategoryIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("CategoryIdentifier");

                    b.ToTable("category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryIdentifier = new Guid("414e65b4-1949-48ce-a764-26fb66e95550"),
                            CategoryDescription = "Thể loại theo sau một tội ác (như giết người hoặc mất tích) từ thời điểm nó được thực hiện cho đến thời điểm nó được giải quyết",
                            CategoryName = "Mystery"
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("1b9d5460-4c32-4703-b4bd-c52e5fb6e943"),
                            CategoryDescription = "Thường đề cập đến một loại tiểu thuyết thuộc thể loại viễn tưởng tập trung chủ yếu vào mối quan hệ và tình yêu lãng mạn giữa hai người, và thường có một kết thúc lạc quan và thỏa mãn về mặt cảm xúc",
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("ad2149ef-ac21-4759-88d8-e586e850e299"),
                            CategoryDescription = "Lấy bối cảnh là một giai đoạn lịch sử và cố gắng truyền đạt tinh thần, cách cư xử và điều kiện xã hội của một thời đại đã qua với các chi tiết hiện thực và sự trung thực (trong một số trường hợp chỉ là sự trung thực bề ngoài) với sự thật lịch sử",
                            CategoryName = "Historical"
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("edc6e266-7b95-4723-a420-8e51a78d99bc"),
                            CategoryDescription = "Phương thức cụ thể của tiểu thuyết được thể hiện trong biểu diễn: một vở kịch, opera, kịch câm, múa ba lê, v.v., được trình diễn trong rạp hát, hoặc trên đài phát thanh hoặc truyền hình",
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("72522ef6-6633-4519-872b-36bc0675e328"),
                            CategoryDescription = "Một thể loại của tiểu thuyết suy đoán liên quan đến các yếu tố ma thuật, thường lấy bối cảnh trong một vũ trụ hư cấu và đôi khi lấy cảm hứng từ thần thoại và văn hóa dân gian",
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("ddebafec-b0a5-49c6-ac6c-261079080dce"),
                            CategoryDescription = "Thể loại bao gồm những cuốn sách mà nhân vật chính thực hiện một cuộc hành trình sử thi, về mặt cá nhân hoặc địa lý",
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("322dbf35-54aa-416e-b121-42fc20b9d94b"),
                            CategoryDescription = "Một thể loại biên tập truyện tranh Nhật Bản nhắm đến đối tượng là các cậu bé vị thành niên",
                            CategoryName = "Shounen"
                        });
                });

            modelBuilder.Entity("Entity.ChapterEntity", b =>
                {
                    b.Property<Guid>("ChapterIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateOnly>("AddedDate")
                        .HasColumnType("date");

                    b.Property<double>("ChapterNumber")
                        .HasColumnType("double precision");

                    b.Property<int>("ChapterUnlockPrice")
                        .HasColumnType("integer");

                    b.Property<Guid>("ComicIdentifier")
                        .HasColumnType("uuid");

                    b.HasKey("ChapterIdentifier");

                    b.HasIndex("ComicIdentifier");

                    b.ToTable("chapter", (string)null);

                    b.HasData(
                        new
                        {
                            ChapterIdentifier = new Guid("3f5a415f-caa3-426b-8926-a11a55dc49b0"),
                            AddedDate = new DateOnly(2023, 6, 11),
                            ChapterNumber = 1.0,
                            ChapterUnlockPrice = 0,
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787")
                        },
                        new
                        {
                            ChapterIdentifier = new Guid("ef26e85e-4bd5-414f-9a2b-40bc43534523"),
                            AddedDate = new DateOnly(2023, 6, 11),
                            ChapterNumber = 1.0,
                            ChapterUnlockPrice = 0,
                            ComicIdentifier = new Guid("b8d6abf3-b7e0-4a20-8647-f8f4f1ac04d3")
                        },
                        new
                        {
                            ChapterIdentifier = new Guid("94f15b6a-a89b-4546-82a4-98098bab83ff"),
                            AddedDate = new DateOnly(2023, 6, 11),
                            ChapterNumber = 1.0,
                            ChapterUnlockPrice = 0,
                            ComicIdentifier = new Guid("aadadaf7-fc21-4559-a53c-f97eb1ba583f")
                        },
                        new
                        {
                            ChapterIdentifier = new Guid("ab9d0e26-4c6e-40a8-97e3-1d5d012b4d80"),
                            AddedDate = new DateOnly(2023, 6, 11),
                            ChapterNumber = 1.0,
                            ChapterUnlockPrice = 0,
                            ComicIdentifier = new Guid("8aa5080b-0212-4b9c-9b70-0afc2bc4b99f")
                        },
                        new
                        {
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            AddedDate = new DateOnly(2023, 6, 11),
                            ChapterNumber = 1.0,
                            ChapterUnlockPrice = 0,
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e")
                        });
                });

            modelBuilder.Entity("Entity.ChapterImageEntity", b =>
                {
                    b.Property<Guid>("ImageIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("ChapterIdentifier")
                        .HasColumnType("uuid");

                    b.Property<short>("ImageNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("ImageIdentifier");

                    b.HasIndex("ChapterIdentifier");

                    b.ToTable("chapter_image", (string)null);

                    b.HasData(
                        new
                        {
                            ImageIdentifier = new Guid("ad981387-1e98-4036-8934-868c5e0880a9"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)0,
                            ImageURL = "0.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("9a4c2922-3a3b-4cc1-ba2e-d62317c8c0e0"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)1,
                            ImageURL = "1.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("48a81e89-dbad-4fb5-b992-66b0a575d781"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)2,
                            ImageURL = "2.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("31ae274b-4dfc-4deb-af28-46de52cb6feb"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)3,
                            ImageURL = "3.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("cb4b4f62-523f-4044-9d58-1ae3f12d430c"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)4,
                            ImageURL = "4.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("3aaaa9a7-4465-494a-a7bd-08157d913586"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)5,
                            ImageURL = "5.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("7fb2316f-4341-401d-b28a-40146f8a7a0b"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)6,
                            ImageURL = "6.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("d9c7b2a1-67e0-4daa-8ad0-b8560938e847"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)7,
                            ImageURL = "7.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("25a2ab91-5674-44aa-bbac-2ea3bceb71d4"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)8,
                            ImageURL = "8.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("785fb0ef-b383-4f44-98b5-bd6a555f0626"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)9,
                            ImageURL = "9.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("c2fa7cbe-138b-42e5-ad7b-c0afd43f43fd"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)10,
                            ImageURL = "10.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("cb117933-9ccc-4ad6-afcf-65da344ba69a"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)11,
                            ImageURL = "11.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("d119637e-bf32-4b23-81ff-a09c1d910b81"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)12,
                            ImageURL = "12.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("e992e5d9-67a8-4164-9273-ae229e648556"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)13,
                            ImageURL = "13.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("bf280315-0e15-4074-978e-c0014a946383"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)14,
                            ImageURL = "14.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("97ce8e61-ac01-4e85-9a12-67d94f5b7102"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)15,
                            ImageURL = "15.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("1d73b99e-f451-4b55-9b20-ea4d572bc3a0"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)16,
                            ImageURL = "16.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("4aca6f3a-2ccf-49de-af02-0b1776e793ee"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)17,
                            ImageURL = "17.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("f78ffa61-a567-479a-aa79-011dfa2fdc4e"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)18,
                            ImageURL = "18.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("a79456c1-8024-4128-9a31-db46f7eeef08"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)19,
                            ImageURL = "19.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("2cd639ce-c96f-4589-8014-0e6e7f9ff69f"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)20,
                            ImageURL = "20.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("1c9b47b7-27a5-46c4-a8d0-e7163f1c3e7f"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)21,
                            ImageURL = "21.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("2abfb23c-34fa-4a48-b442-a1b28201ff32"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)22,
                            ImageURL = "22.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("45c4dfd6-910c-49a4-bb1c-f499377c8c61"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)23,
                            ImageURL = "23.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("64e10a07-b7f7-4335-9ef9-a3c7a5b67d7c"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)24,
                            ImageURL = "24.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("0e66730c-50f5-4f72-b8cd-2f720ddf6d7e"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)25,
                            ImageURL = "25.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("71147712-b450-4e4b-8df1-ed5d50160bf9"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)26,
                            ImageURL = "26.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("853addd5-5496-490f-86bd-cc12ba04e2bd"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)27,
                            ImageURL = "27.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("97c8d20b-0f88-47a6-91cb-e76d0b357ad3"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)28,
                            ImageURL = "28.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("19954bda-0156-48f9-aee6-c8c258dafa58"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)29,
                            ImageURL = "29.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("ae3756ad-6b22-4645-90c6-a01b60b04d59"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)30,
                            ImageURL = "30.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("bc5a3dbb-6b9e-4c4c-a013-f66ad22077dc"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)31,
                            ImageURL = "31.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("eec8c785-84cf-4b8e-bcf2-128a4d9876da"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)32,
                            ImageURL = "32.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("87e12554-c4a1-4bb7-906f-71c16042aaf3"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)33,
                            ImageURL = "33.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("b8f10d3d-74fb-448e-87a6-c2a46514e0e8"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)34,
                            ImageURL = "34.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("f1a77aa3-ffc5-4e9f-adcd-757545657941"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)35,
                            ImageURL = "35.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("6788fa1f-f257-4582-842e-ad505f1c8e92"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)36,
                            ImageURL = "36.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("f85d2bd9-6d9c-4a92-85b1-11c3ad17c133"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)37,
                            ImageURL = "37.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("a11be2b5-3c5c-4adc-8642-d2dfda33813d"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)38,
                            ImageURL = "38.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("4e86fa98-7b46-44e7-92bc-dcc997c3574a"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)39,
                            ImageURL = "39.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("22a1a283-80c0-4dc2-a9da-0a71a13b5dc0"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)40,
                            ImageURL = "40.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("3d6be27d-6bcc-4e23-9fde-f785d000a72e"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)41,
                            ImageURL = "41.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("5b2c0a01-6bc0-4b9c-b66f-72c45c8bdcb7"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)42,
                            ImageURL = "42.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("0c17d220-7f8e-4b58-b15d-a3f9d37a70dd"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)43,
                            ImageURL = "43.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("47059dc1-e213-4dc9-a1f3-1e263f7f29f2"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)44,
                            ImageURL = "44.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("34c310fd-4fdc-4048-9b11-7b0a29d3b440"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)45,
                            ImageURL = "45.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("6819a0d1-31a5-4e13-aaab-57fa19edc770"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)46,
                            ImageURL = "46.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("9f58f9f7-40c0-46bc-8052-7cb0ffca9a2c"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)47,
                            ImageURL = "47.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("7bd54d5b-d802-4d60-91a8-82a9079b1876"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)48,
                            ImageURL = "48.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("72b0ea4d-8f47-4e40-8fbb-9a5d5e1c87d3"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)49,
                            ImageURL = "49.jpg"
                        },
                        new
                        {
                            ImageIdentifier = new Guid("d3c2b7fa-2f9f-4883-862d-a9556d24a35d"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ImageNumber = (short)50,
                            ImageURL = "50.jpg"
                        });
                });

            modelBuilder.Entity("Entity.ComicCategoryEntity", b =>
                {
                    b.Property<Guid>("CategoryIdentifier")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComicIdentifier")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryIdentifier", "ComicIdentifier");

                    b.HasIndex("ComicIdentifier");

                    b.ToTable("comic_category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryIdentifier = new Guid("edc6e266-7b95-4723-a420-8e51a78d99bc"),
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("72522ef6-6633-4519-872b-36bc0675e328"),
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("322dbf35-54aa-416e-b121-42fc20b9d94b"),
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("1b9d5460-4c32-4703-b4bd-c52e5fb6e943"),
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("ad2149ef-ac21-4759-88d8-e586e850e299"),
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("ddebafec-b0a5-49c6-ac6c-261079080dce"),
                            ComicIdentifier = new Guid("aadadaf7-fc21-4559-a53c-f97eb1ba583f")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("72522ef6-6633-4519-872b-36bc0675e328"),
                            ComicIdentifier = new Guid("aadadaf7-fc21-4559-a53c-f97eb1ba583f")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("ddebafec-b0a5-49c6-ac6c-261079080dce"),
                            ComicIdentifier = new Guid("8aa5080b-0212-4b9c-9b70-0afc2bc4b99f")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("322dbf35-54aa-416e-b121-42fc20b9d94b"),
                            ComicIdentifier = new Guid("8aa5080b-0212-4b9c-9b70-0afc2bc4b99f")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("edc6e266-7b95-4723-a420-8e51a78d99bc"),
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("72522ef6-6633-4519-872b-36bc0675e328"),
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("322dbf35-54aa-416e-b121-42fc20b9d94b"),
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("414e65b4-1949-48ce-a764-26fb66e95550"),
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("1b9d5460-4c32-4703-b4bd-c52e5fb6e943"),
                            ComicIdentifier = new Guid("b8d6abf3-b7e0-4a20-8647-f8f4f1ac04d3")
                        },
                        new
                        {
                            CategoryIdentifier = new Guid("414e65b4-1949-48ce-a764-26fb66e95550"),
                            ComicIdentifier = new Guid("b8d6abf3-b7e0-4a20-8647-f8f4f1ac04d3")
                        });
                });

            modelBuilder.Entity("Entity.ComicEntity", b =>
                {
                    b.Property<Guid>("ComicIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ComicAvatar")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ComicDescription")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<double>("ComicLatestChapter")
                        .HasColumnType("double precision");

                    b.Property<string>("ComicName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateOnly>("ComicPublishDate")
                        .HasColumnType("date");

                    b.Property<Guid>("PublisherIdentifier")
                        .HasColumnType("uuid");

                    b.HasKey("ComicIdentifier");

                    b.HasIndex("PublisherIdentifier");

                    b.ToTable("comic", (string)null);

                    b.HasData(
                        new
                        {
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787"),
                            ComicAvatar = "Thanh_Gươm_Diệt_Quỷ.jpg",
                            ComicDescription = "Kimetsu no Yaiba – Tanjirou là con cả của gia đình vừa mất cha. Một ngày nọ, Tanjirou đến thăm thị trấn khác để bán than, khi đêm về cậu ở nghỉ tại nhà người khác thay vì về nhà vì lời đồn thổi về ác quỷ luôn rình mò gần núi vào buổi tối. Khi cậu về nhà vào ngày hôm sau, bị kịch đang đợi chờ cậu…",
                            ComicLatestChapter = 205.59999999999999,
                            ComicName = "Thanh Gươm Diệt Quỷ",
                            ComicPublishDate = new DateOnly(2016, 11, 2),
                            PublisherIdentifier = new Guid("51b02aef-2b58-4433-adea-e73c37b9f224")
                        },
                        new
                        {
                            ComicIdentifier = new Guid("aadadaf7-fc21-4559-a53c-f97eb1ba583f"),
                            ComicAvatar = "Hội_Pháp_Sư_Nhiệm_Vụ_Trăm_Năm.jpg",
                            ComicDescription = "Tuyện tiếp nối chap 545 của Fairy Tail, khi nhóm Natsu đi làm nhiệm vụ trăm năm.",
                            ComicLatestChapter = 132.0,
                            ComicName = "Hội Pháp Sư Nhiệm Vụ Trăm Năm",
                            ComicPublishDate = new DateOnly(2018, 7, 25),
                            PublisherIdentifier = new Guid("51b02aef-2b58-4433-adea-e73c37b9f224")
                        },
                        new
                        {
                            ComicIdentifier = new Guid("8aa5080b-0212-4b9c-9b70-0afc2bc4b99f"),
                            ComicAvatar = "Onepunch_Man.jpg",
                            ComicDescription = "Onepunch-Man là một Manga thể loại siêu anh hùng với đặc trưng phồng tôm đấm phát chết luôn… Lol!!! Nhân vật chính trong Onepunch-man là Saitama, một con người mà nhìn đâu cũng thấy “tầm thường”, từ khuôn mặt vô hồn, cái đầu trọc lóc, cho tới thể hình long tong. Tuy nhiên, con người nhìn thì tầm thường này lại chuyên giải quyết những vấn đề hết sức bất thường. Anh thực chất chính là một siêu anh hùng luôn tìm kiếm cho mình một đối thủ mạnh. Vấn đề là, cứ mỗi lần bắt gặp một đối thủ tiềm năng, thì đối thủ nào cũng như đối thủ nào, chỉ ăn một đấm của anh là… chết luôn. Liệu rằng Onepunch-Man Saitaman có thể tìm được cho mình một kẻ ác dữ dằn đủ sức đấu với anh? Hãy theo bước Saitama trên con đường một đấm tìm đối cực kỳ hài hước của anh!!\r\n\r\n",
                            ComicLatestChapter = 232.0,
                            ComicName = "Onepunch Man",
                            ComicPublishDate = new DateOnly(2018, 3, 26),
                            PublisherIdentifier = new Guid("51b02aef-2b58-4433-adea-e73c37b9f224")
                        },
                        new
                        {
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e"),
                            ComicAvatar = "Black_Clover_Thế_Giới_Phép_Thuật.jpg",
                            ComicDescription = "Aster và Yuno là hai đứa trẻ bị bỏ rơi ở nhà thờ và cùng nhau lớn lên tại đó. Khi còn nhỏ, chúng đã hứa với nhau xem ai sẽ trở thành Ma pháp vương tiếp theo. Thế nhưng, khi cả hai lớn lên, mọi sô chuyện đã thay đổi. Yuno là thiên tài ma pháp với sức mạnh tuyệt đỉnh trong khi Aster lại không thể sử dụng ma pháp và cố gắng bù đắp bằng thể lực. Khi cả hai được nhận sách phép vào tuổi 15, Yuno đã được ban cuốn sách phép cỏ bốn bá (trong khi đa số là cỏ ba lá) mà Aster lại không có cuốn nào. Tuy nhiên, khi Yuno bị đe dọa, sự thật về sức mạnh của Aster đã được giải mã- cậu ta được ban cuốn sách phép cỏ năm lá, cuốn sách phá ma thuật màu đen. Bấy giờ, hai người bạn trẻ đang hướng ra thế giới, cùng chung mục tiêu.",
                            ComicLatestChapter = 360.0,
                            ComicName = "Black Clover - Thế Giới Phép Thuật",
                            ComicPublishDate = new DateOnly(2015, 4, 18),
                            PublisherIdentifier = new Guid("51b02aef-2b58-4433-adea-e73c37b9f224")
                        },
                        new
                        {
                            ComicIdentifier = new Guid("b8d6abf3-b7e0-4a20-8647-f8f4f1ac04d3"),
                            ComicAvatar = "Thần_Y_Đích_Nữ.jpg",
                            ComicDescription = "Một nữ quân y đặc cấp trong bộ đội lục chiến, thánh thủ trung tây y, tinh thông võ thuật, tiễn thuật vì một tai nạn trên không mà xuyên không về lịch sử. Mang trên mình mối thù, nàng sẽ làm gì đây?",
                            ComicLatestChapter = 302.0,
                            ComicName = "Thần Y Đích Nữ",
                            ComicPublishDate = new DateOnly(2016, 5, 26),
                            PublisherIdentifier = new Guid("51b02aef-2b58-4433-adea-e73c37b9f224")
                        });
                });

            modelBuilder.Entity("Entity.ComicSavingEntity", b =>
                {
                    b.Property<Guid>("ComicIdentifier")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserIdentifier")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SavingTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ComicIdentifier", "UserIdentifier");

                    b.HasIndex("UserIdentifier");

                    b.ToTable("comic_saving", (string)null);

                    b.HasData(
                        new
                        {
                            ComicIdentifier = new Guid("b8d6abf3-b7e0-4a20-8647-f8f4f1ac04d3"),
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            SavingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7124)
                        },
                        new
                        {
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e"),
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            SavingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7128)
                        },
                        new
                        {
                            ComicIdentifier = new Guid("8aa5080b-0212-4b9c-9b70-0afc2bc4b99f"),
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            SavingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7130)
                        },
                        new
                        {
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787"),
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            SavingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7132)
                        },
                        new
                        {
                            ComicIdentifier = new Guid("aadadaf7-fc21-4559-a53c-f97eb1ba583f"),
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            SavingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7134)
                        });
                });

            modelBuilder.Entity("Entity.PublisherEntity", b =>
                {
                    b.Property<Guid>("PublisherIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("PublisherDescription")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<Guid>("UserIdentifier")
                        .HasColumnType("uuid");

                    b.HasKey("PublisherIdentifier");

                    b.HasIndex("UserIdentifier")
                        .IsUnique();

                    b.ToTable("publisher", (string)null);

                    b.HasData(
                        new
                        {
                            PublisherIdentifier = new Guid("51b02aef-2b58-4433-adea-e73c37b9f224"),
                            PublisherDescription = "admin kiêm người đăng",
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72")
                        });
                });

            modelBuilder.Entity("Entity.ReadingHistoryEntity", b =>
                {
                    b.Property<Guid>("UserIdentifier")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChapterIdentifier")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastReadingTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserIdentifier", "ChapterIdentifier");

                    b.HasIndex("ChapterIdentifier");

                    b.ToTable("reading_history", (string)null);

                    b.HasData(
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            ChapterIdentifier = new Guid("3f5a415f-caa3-426b-8926-a11a55dc49b0"),
                            LastReadingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7042)
                        },
                        new
                        {
                            UserIdentifier = new Guid("1ef67686-f4ad-48f2-b56c-c828ec53a8d5"),
                            ChapterIdentifier = new Guid("ef26e85e-4bd5-414f-9a2b-40bc43534523"),
                            LastReadingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7049)
                        },
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            ChapterIdentifier = new Guid("ef26e85e-4bd5-414f-9a2b-40bc43534523"),
                            LastReadingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7050)
                        },
                        new
                        {
                            UserIdentifier = new Guid("1ef67686-f4ad-48f2-b56c-c828ec53a8d5"),
                            ChapterIdentifier = new Guid("3f5a415f-caa3-426b-8926-a11a55dc49b0"),
                            LastReadingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7052)
                        },
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            LastReadingTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(7053)
                        });
                });

            modelBuilder.Entity("Entity.ReviewChapterEntity", b =>
                {
                    b.Property<Guid>("UserIdentifier")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChapterIdentifier")
                        .HasColumnType("uuid");

                    b.Property<string>("ChapterComment")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<short>("ChapterRatingStar")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ReviewTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserIdentifier", "ChapterIdentifier");

                    b.HasIndex("ChapterIdentifier");

                    b.ToTable("review_chapter", (string)null);

                    b.HasData(
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            ChapterIdentifier = new Guid("3f5a415f-caa3-426b-8926-a11a55dc49b0"),
                            ChapterComment = "Nó hay vãi",
                            ChapterRatingStar = (short)5,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6965)
                        },
                        new
                        {
                            UserIdentifier = new Guid("1ef67686-f4ad-48f2-b56c-c828ec53a8d5"),
                            ChapterIdentifier = new Guid("3f5a415f-caa3-426b-8926-a11a55dc49b0"),
                            ChapterComment = "Art đẹp, nhưng cốt truyện không hay",
                            ChapterRatingStar = (short)3,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6968)
                        },
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            ChapterIdentifier = new Guid("dc31637b-416c-458d-9942-74fa1470ca20"),
                            ChapterComment = "Art tạm tạm",
                            ChapterRatingStar = (short)2,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6972)
                        },
                        new
                        {
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            ChapterIdentifier = new Guid("ab9d0e26-4c6e-40a8-97e3-1d5d012b4d80"),
                            ChapterComment = "Meh không ổn tí nào",
                            ChapterRatingStar = (short)1,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6973)
                        },
                        new
                        {
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            ChapterIdentifier = new Guid("94f15b6a-a89b-4546-82a4-98098bab83ff"),
                            ChapterComment = "Được phết",
                            ChapterRatingStar = (short)4,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6975)
                        });
                });

            modelBuilder.Entity("Entity.ReviewComicEntity", b =>
                {
                    b.Property<Guid>("UserIdentifier")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComicIdentifier")
                        .HasColumnType("uuid");

                    b.Property<string>("ComicComment")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<short>("ComicRatingStar")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ReviewTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserIdentifier", "ComicIdentifier");

                    b.HasIndex("ComicIdentifier");

                    b.ToTable("review_comic", (string)null);

                    b.HasData(
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787"),
                            ComicComment = "Tổng quan về cốt truyện ở mức ổn",
                            ComicRatingStar = (short)3,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6817)
                        },
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            ComicIdentifier = new Guid("b8d6abf3-b7e0-4a20-8647-f8f4f1ac04d3"),
                            ComicComment = "Cốt truyện khó hiểu",
                            ComicRatingStar = (short)2,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6822)
                        },
                        new
                        {
                            UserIdentifier = new Guid("1ef67686-f4ad-48f2-b56c-c828ec53a8d5"),
                            ComicIdentifier = new Guid("4dfe12e0-cb8a-4282-8e74-3b1e8053f787"),
                            ComicComment = "Cười vãi",
                            ComicRatingStar = (short)5,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6824)
                        },
                        new
                        {
                            UserIdentifier = new Guid("1ef67686-f4ad-48f2-b56c-c828ec53a8d5"),
                            ComicIdentifier = new Guid("b8d6abf3-b7e0-4a20-8647-f8f4f1ac04d3"),
                            ComicComment = "Tui muốn gud end",
                            ComicRatingStar = (short)1,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6826)
                        },
                        new
                        {
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            ComicIdentifier = new Guid("5d34237a-f44c-4f3f-8495-2b36047e034e"),
                            ComicComment = "Đánh nhau ít nhưng tổng quan vẫn OK",
                            ComicRatingStar = (short)4,
                            ReviewTime = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6828)
                        });
                });

            modelBuilder.Entity("Entity.TransactionsHistoryEntity", b =>
                {
                    b.Property<Guid>("TransactionIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<double>("TransactionAmount")
                        .HasColumnType("NUMERIC(6, 0)");

                    b.Property<int>("TransactionCoin")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserIdentifier")
                        .HasColumnType("uuid");

                    b.HasKey("TransactionIdentifier");

                    b.HasIndex("UserIdentifier");

                    b.ToTable("transaction_history", (string)null);

                    b.HasData(
                        new
                        {
                            TransactionIdentifier = new Guid("33d85aab-2f59-4d92-a1e7-7b346c67facc"),
                            TransactionAmount = 100000.0,
                            TransactionCoin = 100,
                            TransactionDate = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6734),
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72")
                        },
                        new
                        {
                            TransactionIdentifier = new Guid("dac3cef5-d6a2-417e-875e-c790f62c1d63"),
                            TransactionAmount = 50000.0,
                            TransactionCoin = 50,
                            TransactionDate = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6740),
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72")
                        },
                        new
                        {
                            TransactionIdentifier = new Guid("1d96460f-c42d-4b4d-a8f0-b8dfc5499d78"),
                            TransactionAmount = 200000.0,
                            TransactionCoin = 200,
                            TransactionDate = new DateTime(2023, 6, 11, 16, 26, 25, 471, DateTimeKind.Utc).AddTicks(6742),
                            UserIdentifier = new Guid("1ef67686-f4ad-48f2-b56c-c828ec53a8d5")
                        });
                });

            modelBuilder.Entity("Entity.UserEntity", b =>
                {
                    b.Property<Guid>("UserIdentifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("UserAccountBalance")
                        .HasColumnType("integer");

                    b.Property<string>("UserAvatar")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateOnly>("UserBirthday")
                        .HasColumnType("date");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("UserGender")
                        .HasColumnType("integer");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(13)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("UserIdentifier");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            UserIdentifier = new Guid("2231dfa9-c0f7-49c9-b0af-dac2cac61c72"),
                            Password = "Jackpie2003",
                            UserAccountBalance = 30,
                            UserAvatar = "User_Empty.png",
                            UserBirthday = new DateOnly(2003, 12, 3),
                            UserEmail = "ledinhdangkhoa10a9@gmail.com",
                            UserFullName = "Lê Đình Đăng Khoa",
                            UserGender = 0,
                            UserPhoneNumber = "0706042250",
                            Username = "Jackpieking"
                        },
                        new
                        {
                            UserIdentifier = new Guid("1ef67686-f4ad-48f2-b56c-c828ec53a8d5"),
                            Password = "NghiaLe123",
                            UserAccountBalance = 100,
                            UserAvatar = "User_Empty.png",
                            UserBirthday = new DateOnly(2003, 4, 2),
                            UserEmail = "nghialt123@gmail.com",
                            UserFullName = "Lee Trung Nghĩa",
                            UserGender = 0,
                            UserPhoneNumber = "0903591555",
                            Username = "wibulord"
                        },
                        new
                        {
                            UserIdentifier = new Guid("c6d20823-3d00-48a0-8074-36587bee2693"),
                            Password = "Lam123",
                            UserAccountBalance = 0,
                            UserAvatar = "User_Empty.png",
                            UserBirthday = new DateOnly(2003, 8, 15),
                            UserEmail = "lamvd@gmail.com",
                            UserFullName = "Võ Đại Lâm",
                            UserGender = 0,
                            UserPhoneNumber = "02343883333",
                            Username = "lamvd"
                        });
                });

            modelBuilder.Entity("Entity.BuyingHistoryEntity", b =>
                {
                    b.HasOne("Entity.ChapterEntity", "ChapterEntity")
                        .WithMany("BuyingHistoryEntities")
                        .HasForeignKey("UserIdentifer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.UserEntity", "UserEntity")
                        .WithMany("BuyingHistorieEntities")
                        .HasForeignKey("UserIdentifer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChapterEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Entity.ChapterEntity", b =>
                {
                    b.HasOne("Entity.ComicEntity", "ComicEntity")
                        .WithMany("ChapterEntities")
                        .HasForeignKey("ComicIdentifier")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ComicEntity");
                });

            modelBuilder.Entity("Entity.ChapterImageEntity", b =>
                {
                    b.HasOne("Entity.ChapterEntity", "ChapterEntity")
                        .WithMany("ChapterImageEntities")
                        .HasForeignKey("ChapterIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChapterEntity");
                });

            modelBuilder.Entity("Entity.ComicCategoryEntity", b =>
                {
                    b.HasOne("Entity.CategoryEntity", "CategoryEntity")
                        .WithMany("ComicCategoryEntities")
                        .HasForeignKey("CategoryIdentifier")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entity.ComicEntity", "ComicEntity")
                        .WithMany("ComicCategoryEntities")
                        .HasForeignKey("ComicIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryEntity");

                    b.Navigation("ComicEntity");
                });

            modelBuilder.Entity("Entity.ComicEntity", b =>
                {
                    b.HasOne("Entity.PublisherEntity", "PublisherEntity")
                        .WithMany("ComicEntities")
                        .HasForeignKey("PublisherIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublisherEntity");
                });

            modelBuilder.Entity("Entity.ComicSavingEntity", b =>
                {
                    b.HasOne("Entity.ComicEntity", "ComicEntity")
                        .WithMany("ComicSavingEntities")
                        .HasForeignKey("ComicIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.UserEntity", "UserEntity")
                        .WithMany("ComicSavingEntities")
                        .HasForeignKey("UserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComicEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Entity.PublisherEntity", b =>
                {
                    b.HasOne("Entity.UserEntity", "UserEntity")
                        .WithOne("PublisherEntity")
                        .HasForeignKey("Entity.PublisherEntity", "UserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Entity.ReadingHistoryEntity", b =>
                {
                    b.HasOne("Entity.ChapterEntity", "ChapterEntity")
                        .WithMany("ReadingHistoryEntities")
                        .HasForeignKey("ChapterIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.UserEntity", "UserEntity")
                        .WithMany("ReadingHistorieEntities")
                        .HasForeignKey("UserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChapterEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Entity.ReviewChapterEntity", b =>
                {
                    b.HasOne("Entity.ChapterEntity", "ChapterEntity")
                        .WithMany("ReviewChapterEntities")
                        .HasForeignKey("ChapterIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.UserEntity", "UserEntity")
                        .WithMany("ReviewChapterEntities")
                        .HasForeignKey("UserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChapterEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Entity.ReviewComicEntity", b =>
                {
                    b.HasOne("Entity.ComicEntity", "ComicEntity")
                        .WithMany("ReviewComicEntities")
                        .HasForeignKey("ComicIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.UserEntity", "UserEntity")
                        .WithMany("ReviewComicEntities")
                        .HasForeignKey("UserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComicEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Entity.TransactionsHistoryEntity", b =>
                {
                    b.HasOne("Entity.UserEntity", "UserEntity")
                        .WithMany("TransactionHistoryEntities")
                        .HasForeignKey("UserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Entity.CategoryEntity", b =>
                {
                    b.Navigation("ComicCategoryEntities");
                });

            modelBuilder.Entity("Entity.ChapterEntity", b =>
                {
                    b.Navigation("BuyingHistoryEntities");

                    b.Navigation("ChapterImageEntities");

                    b.Navigation("ReadingHistoryEntities");

                    b.Navigation("ReviewChapterEntities");
                });

            modelBuilder.Entity("Entity.ComicEntity", b =>
                {
                    b.Navigation("ChapterEntities");

                    b.Navigation("ComicCategoryEntities");

                    b.Navigation("ComicSavingEntities");

                    b.Navigation("ReviewComicEntities");
                });

            modelBuilder.Entity("Entity.PublisherEntity", b =>
                {
                    b.Navigation("ComicEntities");
                });

            modelBuilder.Entity("Entity.UserEntity", b =>
                {
                    b.Navigation("BuyingHistorieEntities");

                    b.Navigation("ComicSavingEntities");

                    b.Navigation("PublisherEntity");

                    b.Navigation("ReadingHistorieEntities");

                    b.Navigation("ReviewChapterEntities");

                    b.Navigation("ReviewComicEntities");

                    b.Navigation("TransactionHistoryEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
