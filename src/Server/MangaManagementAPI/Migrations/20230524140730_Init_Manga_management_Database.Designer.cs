// <auto-generated />
using System;
using MangaManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MangaManagementAPI.Migrations;

[DbContext(typeof(MangaContext))]
[Migration("20230524140730_Init_Manga_management_Database")]
partial class Init_Manga_management_Database
{
	/// <inheritdoc />
	protected override void BuildTargetModel(ModelBuilder modelBuilder)
	{
#pragma warning disable 612, 618
		modelBuilder
			.HasAnnotation("ProductVersion", "7.0.5")
			.HasAnnotation("Relational:MaxIdentifierLength", 63);

		NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

		modelBuilder.Entity("MangaManagementAPI.Data.Models.LoginAccount", b =>
			{
				b.Property<int>("ID")
					.ValueGeneratedOnAdd()
					.HasColumnType("integer");

				NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

				b.Property<string>("Password")
					.IsRequired()
					.HasColumnType("VARCHAR(50)");

				b.Property<int>("Role")
					.HasColumnType("integer");

				b.Property<Guid>("UserIdentifier")
					.HasColumnType("uuid");

				b.Property<string>("UserName")
					.IsRequired()
					.HasColumnType("VARCHAR(50)");

				b.HasKey("ID");

				b.HasIndex("UserIdentifier")
					.IsUnique();

				b.HasIndex("UserName")
					.IsUnique();

				b.ToTable("Login-Account", (string)null);

				b.HasData(
					new
					{
						ID = 1,
						Password = "Jackpie2003",
						Role = 2,
						UserIdentifier = new Guid("585a96f6-3d1b-4fa3-83f1-e2da38ecd92b"),
						UserName = "jackpieking"
					});
			});

		modelBuilder.Entity("MangaManagementAPI.Data.Models.UserAccess", b =>
			{
				b.Property<int>("ID")
					.ValueGeneratedOnAdd()
					.HasColumnType("integer");

				NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

				b.Property<int>("AccountBalance")
					.HasColumnType("integer");

				b.Property<byte?>("Age")
					.HasColumnType("smallint");

				b.Property<string>("Avatar")
					.HasColumnType("text");

				b.Property<DateOnly?>("BirthDay")
					.HasColumnType("date");

				b.Property<string>("Email")
					.IsRequired()
					.HasColumnType("VARCHAR(30)");

				b.Property<string>("FullName")
					.HasColumnType("VARCHAR(30)");

				b.Property<int?>("Gender")
					.HasColumnType("integer");

				b.Property<Guid>("UserIdentifier")
					.HasColumnType("uuid");

				b.HasKey("ID");

				b.HasIndex("UserIdentifier")
					.IsUnique();

				b.ToTable("User-Access", (string)null);

				b.HasData(
					new
					{
						ID = 1,
						AccountBalance = 10000000,
						Age = (byte)20,
						Avatar = "",
						BirthDay = new DateOnly(2003, 12, 3),
						Email = "ledinhdangkhoa10a9@gmail.com",
						FullName = "Le Dinh Dang Khoa",
						Gender = 0,
						UserIdentifier = new Guid("585a96f6-3d1b-4fa3-83f1-e2da38ecd92b")
					});
			});

		modelBuilder.Entity("MangaManagementAPI.Data.Models.LoginAccount", b =>
			{
				b.HasOne("MangaManagementAPI.Data.Models.UserAccess", "UserAccess")
					.WithOne("LoginAccount")
					.HasForeignKey("MangaManagementAPI.Data.Models.LoginAccount", "UserIdentifier")
					.HasPrincipalKey("MangaManagementAPI.Data.Models.UserAccess", "UserIdentifier")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("UserAccess");
			});

		modelBuilder.Entity("MangaManagementAPI.Data.Models.UserAccess", b =>
			{
				b.Navigation("LoginAccount");
			});
#pragma warning restore 612, 618
	}
}
